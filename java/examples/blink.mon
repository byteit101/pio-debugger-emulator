# Monitor script for PIO Blink example.
# To be executed on PIO 0, SM 0.
# For LED on OUT pin, mapped to GPIO0.

# Make a full reset of the emulator.
reset

# We loosely follow the initialization sequence as shown in:
# https://github.com/raspberrypi/pico-examples
# /blob/master/pio/pio_blink/blink.pio

# Configure Wrap.
wrap --pio=0 --sm=0 --wrap=7 --target=2

# Configure Side Set Count.
side-set --pio=0 --sm=0 --count=0 --opt=false

# The code.
enter -a 00 -v 0x80a0 # pull block
enter -a 01 -v 0x6040 # out y, 32
# .wrap_target
enter -a 02 -v 0xa022 # mov x, y
enter -a 03 -v 0xe001 # set pins, 1  ; turn LED on
# lp1:
enter -a 04 -v 0x0044 # jmp x-- lp1  ; (x + 1) cycles delay, x is 32 bit number
enter -a 05 -v 0xa022 # mov x, y
enter -a 06 -v 0xe000 # set pins, 0  ; turn LED off
# lp2:
enter -a 07 -v 0x0047 # jmp x-- lp2  ; delay for same number of cycles again
# .wrap                              ; blink forever

# Just for convience and verification, list the program that
# we just entered, as viewed by PIO 0, SM 0.
unassemble --pio=0 --sm=0 --address=0 --count=8

########
# Init program (analoguous to st7789_lcd_program_init() in st7789_lcd.pio).
########

# GPIO init OUT pin
gpio --pio=0 --gpio=0 --init    # OUT pin on GPIO0

# Set consecutive pindirs, here just a single one for OUT pin.
gpio --pio=0 --gpio=0 --enable # set direction out

# SM Config Set Set Pins(base=0, count=1).
pinctrl --pio=0 --sm=0 --set-base=0 --set-count=1

########
# Initialize SM (analoguous to function pio_sm_init() in Pico C SDK).
########

# Disable state machine 0 of PIO 0 while executing the following
# commands.
sm --pio=0 --sm=0 --enable=false

# Clear FIFOs.
fifo --pio=0 --sm=0 --clear

# Clear FIFO debug flags.
fifo --pio=0 --sm=0 --clear-tx-stall
fifo --pio=0 --sm=0 --clear-tx-over
fifo --pio=0 --sm=0 --clear-rx-under
fifo --pio=0 --sm=0 --clear-rx-stall

# Restart SM.
sm --pio=0 --sm=0 --restart

# Restart clock.
clock --pio=0 --sm=0 --restart

# Set instruction pointer (PC) to address 0.
registers --address=0x00

########
# End of SM initialization.
########

# Enable state machine 0 of PIO 0 to execute the program.
sm --pio=0 --sm=0 --enable=true

########
# End of program initialization.
########

# Put LED blink period length (number of clock cycles per phase minus
# 3) into FIFO.  For example, a value of 4 will result in overall
# blink cycle length of 2 * (4 + 3) = 14 clock cycles.
fifo --enqueue --tx --value 0x00000004

# Done.
quit
