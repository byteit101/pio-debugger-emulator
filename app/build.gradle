/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.jline:jline-reader:3.23.0'
    implementation 'org.jline:jline-builtins:3.23.0'
    implementation 'org.jline:jline-terminal:3.23.0'
    implementation 'org.jline:jline-terminal-jansi:3.23.0'
    
    implementation 'li.flor:native-j-file-chooser:1.6.4'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.soundpaint.rp2040pio.SingleApp'
}

// uber jar, output in app/build/libs/app.jar
jar {
  manifest {
    attributes 'Main-Class': application.mainClass
  }
  
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  
  // include all dependencies
  from {
  	configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

/*task serverJar(type: Jar) {

  manifest {
    attributes 'Main-Class': 'org.soundpaint.rp2040pio.EmulationServer'
  }  
}

task monitorJar(type: Jar) {
  manifest {
    attributes 'Main-Class': 'org.soundpaint.rp2040pio.monitor.Monitor'
  }
}*/

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
